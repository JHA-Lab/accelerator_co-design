node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 331
        }
        dim {
          size: 331
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv0/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv0/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv0/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
}
node {
  name: "conv0/weights/Initializer/truncated_normal"
  op: "Add"
  input: "conv0/weights/Initializer/truncated_normal/mul"
  input: "conv0/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
}
node {
  name: "conv0/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/weights/Assign"
  op: "Assign"
  input: "conv0/weights"
  input: "conv0/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/weights/read"
  op: "Identity"
  input: "conv0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/weights"
      }
    }
  }
}
node {
  name: "conv0/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv0/Conv2D"
  op: "Conv2D"
  input: "input"
  input: "conv0/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0_bn/gamma/Assign"
  op: "Assign"
  input: "conv0_bn/gamma"
  input: "conv0_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_bn/gamma/read"
  op: "Identity"
  input: "conv0_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/gamma"
      }
    }
  }
}
node {
  name: "conv0_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0_bn/beta/Assign"
  op: "Assign"
  input: "conv0_bn/beta"
  input: "conv0_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_bn/beta/read"
  op: "Identity"
  input: "conv0_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/beta"
      }
    }
  }
}
node {
  name: "conv0_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv0_bn/moving_mean"
  input: "conv0_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_bn/moving_mean/read"
  op: "Identity"
  input: "conv0_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv0_bn/moving_variance"
  input: "conv0_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_bn/moving_variance/read"
  op: "Identity"
  input: "conv0_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv0/Conv2D"
  input: "conv0_bn/gamma/read"
  input: "conv0_bn/beta/read"
  input: "conv0_bn/moving_mean/read"
  input: "conv0_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv0_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/Relu"
  op: "Relu"
  input: "conv0_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/Assign"
  op: "Assign"
  input: "cell_stem_0/1x1/weights"
  input: "cell_stem_0/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/1x1/weights/read"
  op: "Identity"
  input: "cell_stem_0/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_stem_0/Relu"
  input: "cell_stem_0/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/beginning_bn/gamma"
  input: "cell_stem_0/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_stem_0/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/beginning_bn/beta"
  input: "cell_stem_0/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_stem_0/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/beginning_bn/moving_mean"
  input: "cell_stem_0/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/beginning_bn/moving_variance"
  input: "cell_stem_0/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/1x1/Conv2D"
  input: "cell_stem_0/beginning_bn/gamma/read"
  input: "cell_stem_0/beginning_bn/beta/read"
  input: "cell_stem_0/beginning_bn/moving_mean/read"
  input: "cell_stem_0/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/Relu"
  op: "Relu"
  input: "conv0_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_0/left/Relu"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_0/left/Relu_1"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "conv0_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_0/right/MaxPool2D/MaxPool"
  input: "cell_stem_0/comb_iter_0/right/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/right/bn_1/gamma"
  input: "cell_stem_0/comb_iter_0/right/bn_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/right/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/right/bn_1/beta"
  input: "cell_stem_0/comb_iter_0/right/bn_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/right/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_0/right/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_0/right/1x1/Conv2D"
  input: "cell_stem_0/comb_iter_0/right/bn_1/gamma/read"
  input: "cell_stem_0/comb_iter_0/right/bn_1/beta/read"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_0/right/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/right/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_stem_0/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_stem_0/comb_iter_0/right/bn_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_1/left/Relu"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_1/left/Relu_1"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_stem_0/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_stem_0/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_2/left/Relu"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_2/left/Relu_1"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_2/right/Relu"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_2/right/Relu_1"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_stem_0/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_stem_0/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_stem_0/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_3/left/Relu"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_3/left/Relu_1"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_stem_0/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_stem_0/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/Relu"
  op: "Relu"
  input: "conv0_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_4/left/Relu"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 54
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_0/comb_iter_4/left/Relu_1"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/Relu"
  op: "Relu"
  input: "cell_stem_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0006\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 54
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/weights/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_stem_0/comb_iter_4/right/Relu"
  input: "cell_stem_0/comb_iter_4/right/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/right/bn_1/gamma"
  input: "cell_stem_0/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/gamma/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/right/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/right/bn_1/beta"
  input: "cell_stem_0/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/beta/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/right/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 54
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_0/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_0/comb_iter_4/right/1x1/Conv2D"
  input: "cell_stem_0/comb_iter_4/right/bn_1/gamma/read"
  input: "cell_stem_0/comb_iter_4/right/bn_1/beta/read"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_mean/read"
  input: "cell_stem_0/comb_iter_4/right/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/right/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_0/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_stem_0/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_stem_0/comb_iter_4/right/bn_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_0/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_stem_0/cell_output/concat"
  op: "ConcatV2"
  input: "cell_stem_0/comb_iter_0/combine/add"
  input: "cell_stem_0/comb_iter_1/combine/add"
  input: "cell_stem_0/comb_iter_2/combine/add"
  input: "cell_stem_0/comb_iter_3/combine/add"
  input: "cell_stem_0/comb_iter_4/combine/add"
  input: "cell_stem_0/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_stem_1/Relu"
  op: "Relu"
  input: "conv0_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/AvgPool"
  op: "AvgPool"
  input: "cell_stem_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/Assign"
  op: "Assign"
  input: "cell_stem_1/path1_conv/weights"
  input: "cell_stem_1/path1_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/weights/read"
  op: "Identity"
  input: "cell_stem_1/path1_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/path1_conv/Conv2D"
  op: "Conv2D"
  input: "cell_stem_1/AvgPool"
  input: "cell_stem_1/path1_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/Pad"
  op: "Pad"
  input: "cell_stem_1/Relu"
  input: "cell_stem_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_stem_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/strided_slice"
  op: "StridedSlice"
  input: "cell_stem_1/Pad"
  input: "cell_stem_1/strided_slice/stack"
  input: "cell_stem_1/strided_slice/stack_1"
  input: "cell_stem_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/AvgPool_1"
  op: "AvgPool"
  input: "cell_stem_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\0006\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21942685544490814
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 54
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/Assign"
  op: "Assign"
  input: "cell_stem_1/path2_conv/weights"
  input: "cell_stem_1/path2_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/weights/read"
  op: "Identity"
  input: "cell_stem_1/path2_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/path2_conv/Conv2D"
  op: "Conv2D"
  input: "cell_stem_1/AvgPool_1"
  input: "cell_stem_1/path2_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_stem_1/concat"
  op: "ConcatV2"
  input: "cell_stem_1/path1_conv/Conv2D"
  input: "cell_stem_1/path2_conv/Conv2D"
  input: "cell_stem_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/final_path_bn/gamma"
  input: "cell_stem_1/final_path_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/gamma/read"
  op: "Identity"
  input: "cell_stem_1/final_path_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/final_path_bn/beta"
  input: "cell_stem_1/final_path_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/beta/read"
  op: "Identity"
  input: "cell_stem_1/final_path_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/final_path_bn/moving_mean"
  input: "cell_stem_1/final_path_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/final_path_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/final_path_bn/moving_variance"
  input: "cell_stem_1/final_path_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/final_path_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/final_path_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/concat"
  input: "cell_stem_1/final_path_bn/gamma/read"
  input: "cell_stem_1/final_path_bn/beta/read"
  input: "cell_stem_1/final_path_bn/moving_mean/read"
  input: "cell_stem_1/final_path_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/final_path_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/Relu_1"
  op: "Relu"
  input: "cell_stem_0/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\016\001\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 270
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/Assign"
  op: "Assign"
  input: "cell_stem_1/1x1/weights"
  input: "cell_stem_1/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/1x1/weights/read"
  op: "Identity"
  input: "cell_stem_1/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_stem_1/Relu_1"
  input: "cell_stem_1/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/beginning_bn/gamma"
  input: "cell_stem_1/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_stem_1/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/beginning_bn/beta"
  input: "cell_stem_1/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_stem_1/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/beginning_bn/moving_mean"
  input: "cell_stem_1/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/beginning_bn/moving_variance"
  input: "cell_stem_1/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/1x1/Conv2D"
  input: "cell_stem_1/beginning_bn/gamma/read"
  input: "cell_stem_1/beginning_bn/beta/read"
  input: "cell_stem_1/beginning_bn/moving_mean/read"
  input: "cell_stem_1/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_stem_1/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_0/left/Relu"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_0/left/Relu_1"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_stem_1/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_stem_1/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_stem_1/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_1/left/Relu"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_1/left/Relu_1"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_stem_1/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_stem_1/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_2/left/Relu"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_2/left/Relu_1"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_2/right/Relu"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_2/right/Relu_1"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_stem_1/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_stem_1/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_stem_1/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_3/left/Relu"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_3/left/Relu_1"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_stem_1/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_stem_1/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_stem_1/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_4/left/Relu"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 108
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_stem_1/comb_iter_4/left/Relu_1"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/Relu"
  op: "Relu"
  input: "cell_stem_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000l\000\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 108
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/weights/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_stem_1/comb_iter_4/right/Relu"
  input: "cell_stem_1/comb_iter_4/right/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/gamma/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/right/bn_1/gamma"
  input: "cell_stem_1/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/gamma/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/right/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/beta/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/right/bn_1/beta"
  input: "cell_stem_1/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/beta/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/right/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/beta"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 108
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance/read"
  op: "Identity"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_stem_1/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_stem_1/comb_iter_4/right/1x1/Conv2D"
  input: "cell_stem_1/comb_iter_4/right/bn_1/gamma/read"
  input: "cell_stem_1/comb_iter_4/right/bn_1/beta/read"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_mean/read"
  input: "cell_stem_1/comb_iter_4/right/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/right/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_stem_1/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_stem_1/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_stem_1/comb_iter_4/right/bn_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_stem_1/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_stem_1/cell_output/concat"
  op: "ConcatV2"
  input: "cell_stem_1/comb_iter_0/combine/add"
  input: "cell_stem_1/comb_iter_1/combine/add"
  input: "cell_stem_1/comb_iter_2/combine/add"
  input: "cell_stem_1/comb_iter_3/combine/add"
  input: "cell_stem_1/comb_iter_4/combine/add"
  input: "cell_stem_1/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_0/Relu"
  op: "Relu"
  input: "cell_stem_0/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/AvgPool"
  op: "AvgPool"
  input: "cell_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\016\001\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 270
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/Assign"
  op: "Assign"
  input: "cell_0/path1_conv/weights"
  input: "cell_0/path1_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/path1_conv/weights/read"
  op: "Identity"
  input: "cell_0/path1_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/path1_conv/Conv2D"
  op: "Conv2D"
  input: "cell_0/AvgPool"
  input: "cell_0/path1_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/Pad"
  op: "Pad"
  input: "cell_0/Relu"
  input: "cell_0/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/strided_slice"
  op: "StridedSlice"
  input: "cell_0/Pad"
  input: "cell_0/strided_slice/stack"
  input: "cell_0/strided_slice/stack_1"
  input: "cell_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/AvgPool_1"
  op: "AvgPool"
  input: "cell_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\016\001\000\000l\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15515822172164917
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 270
        }
        dim {
          size: 108
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/Assign"
  op: "Assign"
  input: "cell_0/path2_conv/weights"
  input: "cell_0/path2_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/path2_conv/weights/read"
  op: "Identity"
  input: "cell_0/path2_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/path2_conv/Conv2D"
  op: "Conv2D"
  input: "cell_0/AvgPool_1"
  input: "cell_0/path2_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_0/concat"
  op: "ConcatV2"
  input: "cell_0/path1_conv/Conv2D"
  input: "cell_0/path2_conv/Conv2D"
  input: "cell_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_0/final_path_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/final_path_bn/gamma/Assign"
  op: "Assign"
  input: "cell_0/final_path_bn/gamma"
  input: "cell_0/final_path_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/final_path_bn/gamma/read"
  op: "Identity"
  input: "cell_0/final_path_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/final_path_bn/beta/Assign"
  op: "Assign"
  input: "cell_0/final_path_bn/beta"
  input: "cell_0/final_path_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/final_path_bn/beta/read"
  op: "Identity"
  input: "cell_0/final_path_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/beta"
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/final_path_bn/moving_mean"
  input: "cell_0/final_path_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_mean/read"
  op: "Identity"
  input: "cell_0/final_path_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/final_path_bn/moving_variance"
  input: "cell_0/final_path_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/final_path_bn/moving_variance/read"
  op: "Identity"
  input: "cell_0/final_path_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/final_path_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/final_path_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/concat"
  input: "cell_0/final_path_bn/gamma/read"
  input: "cell_0/final_path_bn/beta/read"
  input: "cell_0/final_path_bn/moving_mean/read"
  input: "cell_0/final_path_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/final_path_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/Relu_1"
  op: "Relu"
  input: "cell_stem_1/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\034\002\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_0/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_0/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_0/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 540
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/1x1/weights/Assign"
  op: "Assign"
  input: "cell_0/1x1/weights"
  input: "cell_0/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/1x1/weights/read"
  op: "Identity"
  input: "cell_0/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_0/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_0/Relu_1"
  input: "cell_0/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_0/beginning_bn/gamma"
  input: "cell_0/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_0/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_0/beginning_bn/beta"
  input: "cell_0/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_0/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/beginning_bn/moving_mean"
  input: "cell_0/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_0/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/beginning_bn/moving_variance"
  input: "cell_0/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_0/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/1x1/Conv2D"
  input: "cell_0/beginning_bn/gamma/read"
  input: "cell_0/beginning_bn/beta/read"
  input: "cell_0/beginning_bn/moving_mean/read"
  input: "cell_0/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_0/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_0/left/Relu"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_0/left/Relu_1"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_0/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_0/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_0/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_1/left/Relu"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_1/left/Relu_1"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_0/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_0/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_2/left/Relu"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_2/left/Relu_1"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_2/right/Relu"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_2/right/Relu_1"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_0/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_0/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_0/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_3/left/Relu"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_3/left/Relu_1"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_0/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_0/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_0/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_4/left/Relu"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_0/comb_iter_4/left/Relu_1"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_0/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_0/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_0/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_0/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_0/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_0/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_0/cell_output/concat"
  op: "ConcatV2"
  input: "cell_0/comb_iter_0/combine/add"
  input: "cell_0/comb_iter_1/combine/add"
  input: "cell_0/comb_iter_2/combine/add"
  input: "cell_0/comb_iter_3/combine/add"
  input: "cell_0/comb_iter_4/combine/add"
  input: "cell_0/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_1/Relu"
  op: "Relu"
  input: "cell_stem_1/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\034\002\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 540
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_1/prev_1x1/weights"
  input: "cell_1/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_1/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_1/Relu"
  input: "cell_1/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_1/prev_bn/gamma"
  input: "cell_1/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_1/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_1/prev_bn/beta"
  input: "cell_1/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_bn/beta/read"
  op: "Identity"
  input: "cell_1/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/prev_bn/moving_mean"
  input: "cell_1/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_1/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/prev_bn/moving_variance"
  input: "cell_1/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_1/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/prev_1x1/Conv2D"
  input: "cell_1/prev_bn/gamma/read"
  input: "cell_1/prev_bn/beta/read"
  input: "cell_1/prev_bn/moving_mean/read"
  input: "cell_1/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/Relu_1"
  op: "Relu"
  input: "cell_0/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_1/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/1x1/weights/Assign"
  op: "Assign"
  input: "cell_1/1x1/weights"
  input: "cell_1/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/1x1/weights/read"
  op: "Identity"
  input: "cell_1/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_1/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_1/Relu_1"
  input: "cell_1/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_1/beginning_bn/gamma"
  input: "cell_1/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_1/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_1/beginning_bn/beta"
  input: "cell_1/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_1/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/beginning_bn/moving_mean"
  input: "cell_1/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_1/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/beginning_bn/moving_variance"
  input: "cell_1/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_1/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/1x1/Conv2D"
  input: "cell_1/beginning_bn/gamma/read"
  input: "cell_1/beginning_bn/beta/read"
  input: "cell_1/beginning_bn/moving_mean/read"
  input: "cell_1/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_1/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_0/left/Relu"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_0/left/Relu_1"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_1/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_1/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_1/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_1/left/Relu"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_1/left/Relu_1"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_1/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_1/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_2/left/Relu"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_2/left/Relu_1"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_2/right/Relu"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_2/right/Relu_1"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_1/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_1/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_1/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_3/left/Relu"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_3/left/Relu_1"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_1/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_1/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_1/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_4/left/Relu"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_1/comb_iter_4/left/Relu_1"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_1/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_1/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_1/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_1/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_1/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_1/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_1/cell_output/concat"
  op: "ConcatV2"
  input: "cell_1/comb_iter_0/combine/add"
  input: "cell_1/comb_iter_1/combine/add"
  input: "cell_1/comb_iter_2/combine/add"
  input: "cell_1/comb_iter_3/combine/add"
  input: "cell_1/comb_iter_4/combine/add"
  input: "cell_1/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_2/Relu"
  op: "Relu"
  input: "cell_0/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_2/prev_1x1/weights"
  input: "cell_2/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_2/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_2/Relu"
  input: "cell_2/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_2/prev_bn/gamma"
  input: "cell_2/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_2/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_2/prev_bn/beta"
  input: "cell_2/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_bn/beta/read"
  op: "Identity"
  input: "cell_2/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/prev_bn/moving_mean"
  input: "cell_2/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_2/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/prev_bn/moving_variance"
  input: "cell_2/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_2/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/prev_1x1/Conv2D"
  input: "cell_2/prev_bn/gamma/read"
  input: "cell_2/prev_bn/beta/read"
  input: "cell_2/prev_bn/moving_mean/read"
  input: "cell_2/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/Relu_1"
  op: "Relu"
  input: "cell_1/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_2/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/1x1/weights/Assign"
  op: "Assign"
  input: "cell_2/1x1/weights"
  input: "cell_2/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/1x1/weights/read"
  op: "Identity"
  input: "cell_2/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_2/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_2/Relu_1"
  input: "cell_2/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_2/beginning_bn/gamma"
  input: "cell_2/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_2/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_2/beginning_bn/beta"
  input: "cell_2/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_2/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/beginning_bn/moving_mean"
  input: "cell_2/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_2/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/beginning_bn/moving_variance"
  input: "cell_2/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_2/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/1x1/Conv2D"
  input: "cell_2/beginning_bn/gamma/read"
  input: "cell_2/beginning_bn/beta/read"
  input: "cell_2/beginning_bn/moving_mean/read"
  input: "cell_2/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_2/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_0/left/Relu"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_0/left/Relu_1"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_2/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_2/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_2/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_1/left/Relu"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_1/left/Relu_1"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_2/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_2/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_2/left/Relu"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_2/left/Relu_1"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_2/right/Relu"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_2/right/Relu_1"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_2/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_2/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_2/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_3/left/Relu"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_3/left/Relu_1"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_2/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_2/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_2/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_4/left/Relu"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_2/comb_iter_4/left/Relu_1"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_2/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_2/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_2/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_2/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_2/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_2/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_2/cell_output/concat"
  op: "ConcatV2"
  input: "cell_2/comb_iter_0/combine/add"
  input: "cell_2/comb_iter_1/combine/add"
  input: "cell_2/comb_iter_2/combine/add"
  input: "cell_2/comb_iter_3/combine/add"
  input: "cell_2/comb_iter_4/combine/add"
  input: "cell_2/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_3/Relu"
  op: "Relu"
  input: "cell_1/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_3/prev_1x1/weights"
  input: "cell_3/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_3/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_3/Relu"
  input: "cell_3/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_3/prev_bn/gamma"
  input: "cell_3/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_3/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_3/prev_bn/beta"
  input: "cell_3/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_bn/beta/read"
  op: "Identity"
  input: "cell_3/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/prev_bn/moving_mean"
  input: "cell_3/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_3/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/prev_bn/moving_variance"
  input: "cell_3/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_3/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/prev_1x1/Conv2D"
  input: "cell_3/prev_bn/gamma/read"
  input: "cell_3/prev_bn/beta/read"
  input: "cell_3/prev_bn/moving_mean/read"
  input: "cell_3/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/Relu_1"
  op: "Relu"
  input: "cell_2/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_3/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/1x1/weights/Assign"
  op: "Assign"
  input: "cell_3/1x1/weights"
  input: "cell_3/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/1x1/weights/read"
  op: "Identity"
  input: "cell_3/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_3/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_3/Relu_1"
  input: "cell_3/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_3/beginning_bn/gamma"
  input: "cell_3/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_3/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_3/beginning_bn/beta"
  input: "cell_3/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_3/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/beginning_bn/moving_mean"
  input: "cell_3/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_3/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/beginning_bn/moving_variance"
  input: "cell_3/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_3/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/1x1/Conv2D"
  input: "cell_3/beginning_bn/gamma/read"
  input: "cell_3/beginning_bn/beta/read"
  input: "cell_3/beginning_bn/moving_mean/read"
  input: "cell_3/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_3/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_0/left/Relu"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_0/left/Relu_1"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_3/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_3/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_3/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_1/left/Relu"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_1/left/Relu_1"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_3/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_3/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_2/left/Relu"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_2/left/Relu_1"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_2/right/Relu"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_2/right/Relu_1"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_3/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_3/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_3/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_3/left/Relu"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_3/left/Relu_1"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_3/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_3/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_3/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_4/left/Relu"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 216
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\330\000\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 216
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_3/comb_iter_4/left/Relu_1"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 216
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_3/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_3/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_3/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_3/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_3/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_3/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_3/cell_output/concat"
  op: "ConcatV2"
  input: "cell_3/comb_iter_0/combine/add"
  input: "cell_3/comb_iter_1/combine/add"
  input: "cell_3/comb_iter_2/combine/add"
  input: "cell_3/comb_iter_3/combine/add"
  input: "cell_3/comb_iter_4/combine/add"
  input: "cell_3/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_4/Relu"
  op: "Relu"
  input: "cell_2/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_4/prev_1x1/weights"
  input: "cell_4/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_4/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_4/Relu"
  input: "cell_4/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_4/prev_bn/gamma"
  input: "cell_4/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_4/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_4/prev_bn/beta"
  input: "cell_4/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_bn/beta/read"
  op: "Identity"
  input: "cell_4/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/prev_bn/moving_mean"
  input: "cell_4/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_4/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/prev_bn/moving_variance"
  input: "cell_4/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_4/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/prev_1x1/Conv2D"
  input: "cell_4/prev_bn/gamma/read"
  input: "cell_4/prev_bn/beta/read"
  input: "cell_4/prev_bn/moving_mean/read"
  input: "cell_4/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/Relu_1"
  op: "Relu"
  input: "cell_3/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_4/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/1x1/weights/Assign"
  op: "Assign"
  input: "cell_4/1x1/weights"
  input: "cell_4/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/1x1/weights/read"
  op: "Identity"
  input: "cell_4/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_4/Relu_1"
  input: "cell_4/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_4/beginning_bn/gamma"
  input: "cell_4/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_4/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_4/beginning_bn/beta"
  input: "cell_4/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_4/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/beginning_bn/moving_mean"
  input: "cell_4/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_4/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/beginning_bn/moving_variance"
  input: "cell_4/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_4/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/1x1/Conv2D"
  input: "cell_4/beginning_bn/gamma/read"
  input: "cell_4/beginning_bn/beta/read"
  input: "cell_4/beginning_bn/moving_mean/read"
  input: "cell_4/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_4/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_0/left/Relu"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_0/left/Relu_1"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_4/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_4/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_4/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_1/left/Relu"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_1/left/Relu_1"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_4/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_4/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_2/left/Relu"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_2/left/Relu_1"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_2/right/Relu"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_2/right/Relu_1"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_4/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_4/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_4/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_3/left/Relu"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_3/left/Relu_1"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_4/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_4/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_4/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_4/left/Relu"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_4/comb_iter_4/left/Relu_1"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/Relu"
  op: "Relu"
  input: "cell_4/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/right/1x1/weights"
  input: "cell_4/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/weights/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/right/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_4/comb_iter_4/right/Relu"
  input: "cell_4/comb_iter_4/right/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/gamma/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/right/bn_1/gamma"
  input: "cell_4/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/gamma/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/right/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/beta/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/right/bn_1/beta"
  input: "cell_4/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/beta/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/right/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/beta"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/right/bn_1/moving_mean"
  input: "cell_4/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_mean/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/right/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_4/comb_iter_4/right/bn_1/moving_variance"
  input: "cell_4/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/moving_variance/read"
  op: "Identity"
  input: "cell_4/comb_iter_4/right/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_4/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_4/comb_iter_4/right/1x1/Conv2D"
  input: "cell_4/comb_iter_4/right/bn_1/gamma/read"
  input: "cell_4/comb_iter_4/right/bn_1/beta/read"
  input: "cell_4/comb_iter_4/right/bn_1/moving_mean/read"
  input: "cell_4/comb_iter_4/right/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_4/comb_iter_4/right/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_4/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_4/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_4/comb_iter_4/right/bn_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_4/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_4/cell_output/concat"
  op: "ConcatV2"
  input: "cell_4/comb_iter_0/combine/add"
  input: "cell_4/comb_iter_1/combine/add"
  input: "cell_4/comb_iter_2/combine/add"
  input: "cell_4/comb_iter_3/combine/add"
  input: "cell_4/comb_iter_4/combine/add"
  input: "cell_4/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_5/Relu"
  op: "Relu"
  input: "cell_3/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/AvgPool"
  op: "AvgPool"
  input: "cell_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/Assign"
  op: "Assign"
  input: "cell_5/path1_conv/weights"
  input: "cell_5/path1_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/path1_conv/weights/read"
  op: "Identity"
  input: "cell_5/path1_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/path1_conv/Conv2D"
  op: "Conv2D"
  input: "cell_5/AvgPool"
  input: "cell_5/path1_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/Pad"
  op: "Pad"
  input: "cell_5/Relu"
  input: "cell_5/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/strided_slice"
  op: "StridedSlice"
  input: "cell_5/Pad"
  input: "cell_5/strided_slice/stack"
  input: "cell_5/strided_slice/stack_1"
  input: "cell_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/AvgPool_1"
  op: "AvgPool"
  input: "cell_5/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0008\004\000\000\330\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10971342772245407
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1080
        }
        dim {
          size: 216
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/Assign"
  op: "Assign"
  input: "cell_5/path2_conv/weights"
  input: "cell_5/path2_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/path2_conv/weights/read"
  op: "Identity"
  input: "cell_5/path2_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/path2_conv/Conv2D"
  op: "Conv2D"
  input: "cell_5/AvgPool_1"
  input: "cell_5/path2_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_5/concat"
  op: "ConcatV2"
  input: "cell_5/path1_conv/Conv2D"
  input: "cell_5/path2_conv/Conv2D"
  input: "cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_5/final_path_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/final_path_bn/gamma/Assign"
  op: "Assign"
  input: "cell_5/final_path_bn/gamma"
  input: "cell_5/final_path_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/final_path_bn/gamma/read"
  op: "Identity"
  input: "cell_5/final_path_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/final_path_bn/beta/Assign"
  op: "Assign"
  input: "cell_5/final_path_bn/beta"
  input: "cell_5/final_path_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/final_path_bn/beta/read"
  op: "Identity"
  input: "cell_5/final_path_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/beta"
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/final_path_bn/moving_mean"
  input: "cell_5/final_path_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_mean/read"
  op: "Identity"
  input: "cell_5/final_path_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/final_path_bn/moving_variance"
  input: "cell_5/final_path_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/final_path_bn/moving_variance/read"
  op: "Identity"
  input: "cell_5/final_path_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/final_path_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/final_path_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/concat"
  input: "cell_5/final_path_bn/gamma/read"
  input: "cell_5/final_path_bn/beta/read"
  input: "cell_5/final_path_bn/moving_mean/read"
  input: "cell_5/final_path_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/final_path_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/Relu_1"
  op: "Relu"
  input: "cell_4/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_5/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_5/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_5/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/1x1/weights/Assign"
  op: "Assign"
  input: "cell_5/1x1/weights"
  input: "cell_5/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/1x1/weights/read"
  op: "Identity"
  input: "cell_5/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_5/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_5/Relu_1"
  input: "cell_5/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_5/beginning_bn/gamma"
  input: "cell_5/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_5/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_5/beginning_bn/beta"
  input: "cell_5/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_5/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/beginning_bn/moving_mean"
  input: "cell_5/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_5/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/beginning_bn/moving_variance"
  input: "cell_5/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_5/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/1x1/Conv2D"
  input: "cell_5/beginning_bn/gamma/read"
  input: "cell_5/beginning_bn/beta/read"
  input: "cell_5/beginning_bn/moving_mean/read"
  input: "cell_5/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_5/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_0/left/Relu"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_0/left/Relu_1"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_5/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_5/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_5/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_1/left/Relu"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_1/left/Relu_1"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_5/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_5/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_2/left/Relu"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_2/left/Relu_1"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_2/right/Relu"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_2/right/Relu_1"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_5/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_5/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_5/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_3/left/Relu"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_3/left/Relu_1"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_5/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_5/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_5/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_4/left/Relu"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_5/comb_iter_4/left/Relu_1"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_5/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_5/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_5/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_5/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_5/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_5/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_5/cell_output/concat"
  op: "ConcatV2"
  input: "cell_5/comb_iter_0/combine/add"
  input: "cell_5/comb_iter_1/combine/add"
  input: "cell_5/comb_iter_2/combine/add"
  input: "cell_5/comb_iter_3/combine/add"
  input: "cell_5/comb_iter_4/combine/add"
  input: "cell_5/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_6/Relu"
  op: "Relu"
  input: "cell_4/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_6/prev_1x1/weights"
  input: "cell_6/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_6/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_6/Relu"
  input: "cell_6/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_6/prev_bn/gamma"
  input: "cell_6/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_6/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_6/prev_bn/beta"
  input: "cell_6/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_bn/beta/read"
  op: "Identity"
  input: "cell_6/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/prev_bn/moving_mean"
  input: "cell_6/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_6/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/prev_bn/moving_variance"
  input: "cell_6/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_6/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/prev_1x1/Conv2D"
  input: "cell_6/prev_bn/gamma/read"
  input: "cell_6/prev_bn/beta/read"
  input: "cell_6/prev_bn/moving_mean/read"
  input: "cell_6/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/Relu_1"
  op: "Relu"
  input: "cell_5/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_6/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/1x1/weights/Assign"
  op: "Assign"
  input: "cell_6/1x1/weights"
  input: "cell_6/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/1x1/weights/read"
  op: "Identity"
  input: "cell_6/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_6/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_6/Relu_1"
  input: "cell_6/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_6/beginning_bn/gamma"
  input: "cell_6/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_6/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_6/beginning_bn/beta"
  input: "cell_6/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_6/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/beginning_bn/moving_mean"
  input: "cell_6/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_6/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/beginning_bn/moving_variance"
  input: "cell_6/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_6/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/1x1/Conv2D"
  input: "cell_6/beginning_bn/gamma/read"
  input: "cell_6/beginning_bn/beta/read"
  input: "cell_6/beginning_bn/moving_mean/read"
  input: "cell_6/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_6/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_0/left/Relu"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_0/left/Relu_1"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_6/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_6/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_6/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_1/left/Relu"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_1/left/Relu_1"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_6/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_6/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_2/left/Relu"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_2/left/Relu_1"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_2/right/Relu"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_2/right/Relu_1"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_6/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_6/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_6/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_3/left/Relu"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_3/left/Relu_1"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_6/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_6/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_6/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_4/left/Relu"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_6/comb_iter_4/left/Relu_1"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_6/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_6/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_6/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_6/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_6/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_6/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_6/cell_output/concat"
  op: "ConcatV2"
  input: "cell_6/comb_iter_0/combine/add"
  input: "cell_6/comb_iter_1/combine/add"
  input: "cell_6/comb_iter_2/combine/add"
  input: "cell_6/comb_iter_3/combine/add"
  input: "cell_6/comb_iter_4/combine/add"
  input: "cell_6/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_7/Relu"
  op: "Relu"
  input: "cell_5/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_7/prev_1x1/weights"
  input: "cell_7/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_7/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_7/Relu"
  input: "cell_7/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_7/prev_bn/gamma"
  input: "cell_7/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_7/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_7/prev_bn/beta"
  input: "cell_7/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_bn/beta/read"
  op: "Identity"
  input: "cell_7/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/prev_bn/moving_mean"
  input: "cell_7/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_7/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/prev_bn/moving_variance"
  input: "cell_7/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_7/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/prev_1x1/Conv2D"
  input: "cell_7/prev_bn/gamma/read"
  input: "cell_7/prev_bn/beta/read"
  input: "cell_7/prev_bn/moving_mean/read"
  input: "cell_7/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/Relu_1"
  op: "Relu"
  input: "cell_6/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_7/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/1x1/weights/Assign"
  op: "Assign"
  input: "cell_7/1x1/weights"
  input: "cell_7/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/1x1/weights/read"
  op: "Identity"
  input: "cell_7/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_7/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_7/Relu_1"
  input: "cell_7/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_7/beginning_bn/gamma"
  input: "cell_7/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_7/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_7/beginning_bn/beta"
  input: "cell_7/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_7/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/beginning_bn/moving_mean"
  input: "cell_7/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_7/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/beginning_bn/moving_variance"
  input: "cell_7/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_7/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/1x1/Conv2D"
  input: "cell_7/beginning_bn/gamma/read"
  input: "cell_7/beginning_bn/beta/read"
  input: "cell_7/beginning_bn/moving_mean/read"
  input: "cell_7/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_7/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_0/left/Relu"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_0/left/Relu_1"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_7/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_7/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_7/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_1/left/Relu"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_1/left/Relu_1"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_7/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_7/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_2/left/Relu"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_2/left/Relu_1"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_2/right/Relu"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_2/right/Relu_1"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_7/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_7/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_7/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_3/left/Relu"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_3/left/Relu_1"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_7/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_7/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_7/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_4/left/Relu"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 432
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\260\001\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 432
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\260\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_7/comb_iter_4/left/Relu_1"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 432
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_7/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_7/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_7/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_7/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_7/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_7/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_7/cell_output/concat"
  op: "ConcatV2"
  input: "cell_7/comb_iter_0/combine/add"
  input: "cell_7/comb_iter_1/combine/add"
  input: "cell_7/comb_iter_2/combine/add"
  input: "cell_7/comb_iter_3/combine/add"
  input: "cell_7/comb_iter_4/combine/add"
  input: "cell_7/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_8/Relu"
  op: "Relu"
  input: "cell_6/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_8/prev_1x1/weights"
  input: "cell_8/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_8/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_8/Relu"
  input: "cell_8/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_8/prev_bn/gamma"
  input: "cell_8/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_8/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_8/prev_bn/beta"
  input: "cell_8/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_bn/beta/read"
  op: "Identity"
  input: "cell_8/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/prev_bn/moving_mean"
  input: "cell_8/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_8/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/prev_bn/moving_variance"
  input: "cell_8/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_8/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/prev_1x1/Conv2D"
  input: "cell_8/prev_bn/gamma/read"
  input: "cell_8/prev_bn/beta/read"
  input: "cell_8/prev_bn/moving_mean/read"
  input: "cell_8/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/Relu_1"
  op: "Relu"
  input: "cell_7/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_8/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/1x1/weights/Assign"
  op: "Assign"
  input: "cell_8/1x1/weights"
  input: "cell_8/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/1x1/weights/read"
  op: "Identity"
  input: "cell_8/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_8/Relu_1"
  input: "cell_8/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_8/beginning_bn/gamma"
  input: "cell_8/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_8/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_8/beginning_bn/beta"
  input: "cell_8/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_8/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/beginning_bn/moving_mean"
  input: "cell_8/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_8/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/beginning_bn/moving_variance"
  input: "cell_8/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_8/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/1x1/Conv2D"
  input: "cell_8/beginning_bn/gamma/read"
  input: "cell_8/beginning_bn/beta/read"
  input: "cell_8/beginning_bn/moving_mean/read"
  input: "cell_8/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_8/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_0/left/Relu"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_0/left/Relu_1"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_8/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_8/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_8/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_1/left/Relu"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_1/left/Relu_1"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_8/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_8/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_2/left/Relu"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_2/left/Relu_1"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_2/right/Relu"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_2/right/Relu_1"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_8/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_8/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_8/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_3/left/Relu"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_3/left/Relu_1"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_8/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_8/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_8/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_4/left/Relu"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_8/comb_iter_4/left/Relu_1"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/Relu"
  op: "Relu"
  input: "cell_8/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/right/1x1/weights"
  input: "cell_8/comb_iter_4/right/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/weights/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/right/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_8/comb_iter_4/right/Relu"
  input: "cell_8/comb_iter_4/right/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/gamma/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/right/bn_1/gamma"
  input: "cell_8/comb_iter_4/right/bn_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/gamma/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/right/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/gamma"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/beta/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/right/bn_1/beta"
  input: "cell_8/comb_iter_4/right/bn_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/beta/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/right/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/beta"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/right/bn_1/moving_mean"
  input: "cell_8/comb_iter_4/right/bn_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_mean/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/right/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_8/comb_iter_4/right/bn_1/moving_variance"
  input: "cell_8/comb_iter_4/right/bn_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/moving_variance/read"
  op: "Identity"
  input: "cell_8/comb_iter_4/right/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_8/comb_iter_4/right/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_8/comb_iter_4/right/1x1/Conv2D"
  input: "cell_8/comb_iter_4/right/bn_1/gamma/read"
  input: "cell_8/comb_iter_4/right/bn_1/beta/read"
  input: "cell_8/comb_iter_4/right/bn_1/moving_mean/read"
  input: "cell_8/comb_iter_4/right/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_8/comb_iter_4/right/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_8/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_8/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_8/comb_iter_4/right/bn_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_8/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_8/cell_output/concat"
  op: "ConcatV2"
  input: "cell_8/comb_iter_0/combine/add"
  input: "cell_8/comb_iter_1/combine/add"
  input: "cell_8/comb_iter_2/combine/add"
  input: "cell_8/comb_iter_3/combine/add"
  input: "cell_8/comb_iter_4/combine/add"
  input: "cell_8/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_9/Relu"
  op: "Relu"
  input: "cell_7/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/AvgPool"
  op: "AvgPool"
  input: "cell_9/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/Assign"
  op: "Assign"
  input: "cell_9/path1_conv/weights"
  input: "cell_9/path1_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/path1_conv/weights/read"
  op: "Identity"
  input: "cell_9/path1_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path1_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/path1_conv/Conv2D"
  op: "Conv2D"
  input: "cell_9/AvgPool"
  input: "cell_9/path1_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/Pad"
  op: "Pad"
  input: "cell_9/Relu"
  input: "cell_9/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/strided_slice"
  op: "StridedSlice"
  input: "cell_9/Pad"
  input: "cell_9/strided_slice/stack"
  input: "cell_9/strided_slice/stack_1"
  input: "cell_9/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/AvgPool_1"
  op: "AvgPool"
  input: "cell_9/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000p\010\000\000\260\001\000\000"
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07757911086082458
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal/mul"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2160
        }
        dim {
          size: 432
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/Assign"
  op: "Assign"
  input: "cell_9/path2_conv/weights"
  input: "cell_9/path2_conv/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/path2_conv/weights/read"
  op: "Identity"
  input: "cell_9/path2_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/path2_conv/weights"
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/path2_conv/Conv2D"
  op: "Conv2D"
  input: "cell_9/AvgPool_1"
  input: "cell_9/path2_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_9/concat"
  op: "ConcatV2"
  input: "cell_9/path1_conv/Conv2D"
  input: "cell_9/path2_conv/Conv2D"
  input: "cell_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_9/final_path_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/final_path_bn/gamma/Assign"
  op: "Assign"
  input: "cell_9/final_path_bn/gamma"
  input: "cell_9/final_path_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/final_path_bn/gamma/read"
  op: "Identity"
  input: "cell_9/final_path_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/final_path_bn/beta/Assign"
  op: "Assign"
  input: "cell_9/final_path_bn/beta"
  input: "cell_9/final_path_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/final_path_bn/beta/read"
  op: "Identity"
  input: "cell_9/final_path_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/beta"
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/final_path_bn/moving_mean"
  input: "cell_9/final_path_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_mean/read"
  op: "Identity"
  input: "cell_9/final_path_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/final_path_bn/moving_variance"
  input: "cell_9/final_path_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/final_path_bn/moving_variance/read"
  op: "Identity"
  input: "cell_9/final_path_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/final_path_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/final_path_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/concat"
  input: "cell_9/final_path_bn/gamma/read"
  input: "cell_9/final_path_bn/beta/read"
  input: "cell_9/final_path_bn/moving_mean/read"
  input: "cell_9/final_path_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/final_path_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/Relu_1"
  op: "Relu"
  input: "cell_8/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\340\020\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_9/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_9/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_9/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 4320
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/1x1/weights/Assign"
  op: "Assign"
  input: "cell_9/1x1/weights"
  input: "cell_9/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/1x1/weights/read"
  op: "Identity"
  input: "cell_9/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_9/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_9/Relu_1"
  input: "cell_9/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_9/beginning_bn/gamma"
  input: "cell_9/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_9/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_9/beginning_bn/beta"
  input: "cell_9/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_9/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/beginning_bn/moving_mean"
  input: "cell_9/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_9/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/beginning_bn/moving_variance"
  input: "cell_9/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_9/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/1x1/Conv2D"
  input: "cell_9/beginning_bn/gamma/read"
  input: "cell_9/beginning_bn/beta/read"
  input: "cell_9/beginning_bn/moving_mean/read"
  input: "cell_9/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_9/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_0/left/Relu"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_0/left/Relu_1"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_9/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_9/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_9/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_1/left/Relu"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_1/left/Relu_1"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_9/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_9/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_2/left/Relu"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_2/left/Relu_1"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_2/right/Relu"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_2/right/Relu_1"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_9/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_9/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_9/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_3/left/Relu"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_3/left/Relu_1"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_9/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_9/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_9/final_path_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_4/left/Relu"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_9/comb_iter_4/left/Relu_1"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_9/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_9/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_9/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_9/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_9/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_9/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_9/cell_output/concat"
  op: "ConcatV2"
  input: "cell_9/comb_iter_0/combine/add"
  input: "cell_9/comb_iter_1/combine/add"
  input: "cell_9/comb_iter_2/combine/add"
  input: "cell_9/comb_iter_3/combine/add"
  input: "cell_9/comb_iter_4/combine/add"
  input: "cell_9/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_10/Relu"
  op: "Relu"
  input: "cell_8/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\340\020\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 4320
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_10/prev_1x1/weights"
  input: "cell_10/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_10/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_10/Relu"
  input: "cell_10/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_10/prev_bn/gamma"
  input: "cell_10/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_10/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_10/prev_bn/beta"
  input: "cell_10/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_bn/beta/read"
  op: "Identity"
  input: "cell_10/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/prev_bn/moving_mean"
  input: "cell_10/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_10/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/prev_bn/moving_variance"
  input: "cell_10/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_10/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/prev_1x1/Conv2D"
  input: "cell_10/prev_bn/gamma/read"
  input: "cell_10/prev_bn/beta/read"
  input: "cell_10/prev_bn/moving_mean/read"
  input: "cell_10/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/Relu_1"
  op: "Relu"
  input: "cell_9/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\340\020\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_10/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 4320
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/1x1/weights/Assign"
  op: "Assign"
  input: "cell_10/1x1/weights"
  input: "cell_10/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/1x1/weights/read"
  op: "Identity"
  input: "cell_10/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_10/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_10/Relu_1"
  input: "cell_10/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_10/beginning_bn/gamma"
  input: "cell_10/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_10/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_10/beginning_bn/beta"
  input: "cell_10/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_10/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/beginning_bn/moving_mean"
  input: "cell_10/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_10/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/beginning_bn/moving_variance"
  input: "cell_10/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_10/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/1x1/Conv2D"
  input: "cell_10/beginning_bn/gamma/read"
  input: "cell_10/beginning_bn/beta/read"
  input: "cell_10/beginning_bn/moving_mean/read"
  input: "cell_10/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_10/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_0/left/Relu"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_0/left/Relu_1"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_10/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_10/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_10/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_1/left/Relu"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_1/left/Relu_1"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_10/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_10/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_2/left/Relu"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_2/left/Relu_1"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_2/right/Relu"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_2/right/Relu_1"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_10/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_10/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_10/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_3/left/Relu"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_3/left/Relu_1"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_10/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_10/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_10/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_4/left/Relu"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_10/comb_iter_4/left/Relu_1"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_10/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_10/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_10/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_10/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_10/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_10/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_10/cell_output/concat"
  op: "ConcatV2"
  input: "cell_10/comb_iter_0/combine/add"
  input: "cell_10/comb_iter_1/combine/add"
  input: "cell_10/comb_iter_2/combine/add"
  input: "cell_10/comb_iter_3/combine/add"
  input: "cell_10/comb_iter_4/combine/add"
  input: "cell_10/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cell_11/Relu"
  op: "Relu"
  input: "cell_9/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\340\020\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 4320
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/Assign"
  op: "Assign"
  input: "cell_11/prev_1x1/weights"
  input: "cell_11/prev_1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_1x1/weights/read"
  op: "Identity"
  input: "cell_11/prev_1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/prev_1x1/Conv2D"
  op: "Conv2D"
  input: "cell_11/Relu"
  input: "cell_11/prev_1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/prev_bn/gamma/Assign"
  op: "Assign"
  input: "cell_11/prev_bn/gamma"
  input: "cell_11/prev_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_bn/gamma/read"
  op: "Identity"
  input: "cell_11/prev_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/prev_bn/beta/Assign"
  op: "Assign"
  input: "cell_11/prev_bn/beta"
  input: "cell_11/prev_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_bn/beta/read"
  op: "Identity"
  input: "cell_11/prev_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/beta"
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/prev_bn/moving_mean"
  input: "cell_11/prev_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_mean/read"
  op: "Identity"
  input: "cell_11/prev_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/prev_bn/moving_variance"
  input: "cell_11/prev_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/prev_bn/moving_variance/read"
  op: "Identity"
  input: "cell_11/prev_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/prev_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/prev_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/prev_1x1/Conv2D"
  input: "cell_11/prev_bn/gamma/read"
  input: "cell_11/prev_bn/beta/read"
  input: "cell_11/prev_bn/moving_mean/read"
  input: "cell_11/prev_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/prev_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/Relu_1"
  op: "Relu"
  input: "cell_10/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\340\020\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/1x1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/1x1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/1x1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/1x1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/1x1/weights/Initializer/truncated_normal/mul"
  input: "cell_11/1x1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/1x1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 4320
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/1x1/weights/Assign"
  op: "Assign"
  input: "cell_11/1x1/weights"
  input: "cell_11/1x1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/1x1/weights/read"
  op: "Identity"
  input: "cell_11/1x1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/1x1/weights"
      }
    }
  }
}
node {
  name: "cell_11/1x1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/1x1/Conv2D"
  op: "Conv2D"
  input: "cell_11/Relu_1"
  input: "cell_11/1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/beginning_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/beginning_bn/gamma/Assign"
  op: "Assign"
  input: "cell_11/beginning_bn/gamma"
  input: "cell_11/beginning_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/beginning_bn/gamma/read"
  op: "Identity"
  input: "cell_11/beginning_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/gamma"
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/beginning_bn/beta/Assign"
  op: "Assign"
  input: "cell_11/beginning_bn/beta"
  input: "cell_11/beginning_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/beginning_bn/beta/read"
  op: "Identity"
  input: "cell_11/beginning_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/beta"
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/beginning_bn/moving_mean"
  input: "cell_11/beginning_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_mean/read"
  op: "Identity"
  input: "cell_11/beginning_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/beginning_bn/moving_variance"
  input: "cell_11/beginning_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/beginning_bn/moving_variance/read"
  op: "Identity"
  input: "cell_11/beginning_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/beginning_bn/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/beginning_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/1x1/Conv2D"
  input: "cell_11/beginning_bn/gamma/read"
  input: "cell_11/beginning_bn/beta/read"
  input: "cell_11/beginning_bn/moving_mean/read"
  input: "cell_11/beginning_bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/beginning_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/Relu"
  op: "Relu"
  input: "cell_11/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_0/left/Relu"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_0/left/separable_5x5_1/separable_conv2d"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/gamma/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/beta/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_0/left/Relu_1"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_0/left/separable_5x5_2/separable_conv2d"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/gamma/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/beta/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_0/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_11/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_0/combine/add"
  op: "Add"
  input: "cell_11/comb_iter_0/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_11/comb_iter_0/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/Relu"
  op: "Relu"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_1/left/Relu"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_1/left/separable_7x7_1/separable_conv2d"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/gamma/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/beta/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_mean/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23035022616386414
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_1/left/Relu_1"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_1/left/separable_7x7_2/separable_conv2d"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/gamma/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/beta/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_mean/read"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_1/left/bn_sep_7x7_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_1/combine/add"
  op: "Add"
  input: "cell_11/comb_iter_1/left/bn_sep_7x7_2/FusedBatchNorm"
  input: "cell_11/comb_iter_1/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/Relu"
  op: "Relu"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_2/left/Relu"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_2/left/separable_5x5_1/separable_conv2d"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/gamma/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/beta/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_mean/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.32249030470848083
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_2/left/Relu_1"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_2/left/separable_5x5_2/separable_conv2d"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/gamma/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/beta/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_mean/read"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_2/left/bn_sep_5x5_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/Relu"
  op: "Relu"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_2/right/Relu"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_2/right/separable_3x3_1/separable_conv2d"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/gamma/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/beta/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_mean/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_2/right/Relu_1"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_2/right/separable_3x3_2/separable_conv2d"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/gamma/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/beta/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_mean/read"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_2/right/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_2/combine/add"
  op: "Add"
  input: "cell_11/comb_iter_2/left/bn_sep_5x5_2/FusedBatchNorm"
  input: "cell_11/comb_iter_2/right/bn_sep_3x3_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/Relu"
  op: "Relu"
  input: "cell_11/comb_iter_2/combine/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_3/left/Relu"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_3/left/separable_3x3_1/separable_conv2d"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/gamma/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/beta/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_3/left/Relu_1"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_3/left/separable_3x3_2/separable_conv2d"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/gamma/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/beta/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_3/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/right/MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_3/combine/add"
  op: "Add"
  input: "cell_11/comb_iter_3/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_11/comb_iter_3/right/MaxPool2D/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/Relu"
  op: "Relu"
  input: "cell_11/prev_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_4/left/Relu"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_4/left/separable_3x3_1/separable_conv2d"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/gamma/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/beta/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_mean/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/Relu_1"
  op: "Relu"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 864
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\003\000\000`\003\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054856713861227036
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  op: "Add"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mul"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 864
        }
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "cell_11/comb_iter_4/left/Relu_1"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  op: "Conv2D"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d/depthwise"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/pointwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/beta"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 864
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Assign"
  op: "Assign"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  op: "Identity"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance"
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "cell_11/comb_iter_4/left/separable_3x3_2/separable_conv2d"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/gamma/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/beta/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_mean/read"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "cell_11/comb_iter_4/left/bn_sep_3x3_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9997000098228455
      }
    }
  }
}
node {
  name: "cell_11/comb_iter_4/combine/add"
  op: "Add"
  input: "cell_11/comb_iter_4/left/bn_sep_3x3_2/FusedBatchNorm"
  input: "cell_11/beginning_bn/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cell_11/cell_output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cell_11/cell_output/concat"
  op: "ConcatV2"
  input: "cell_11/comb_iter_0/combine/add"
  input: "cell_11/comb_iter_1/combine/add"
  input: "cell_11/comb_iter_2/combine/add"
  input: "cell_11/comb_iter_3/combine/add"
  input: "cell_11/comb_iter_4/combine/add"
  input: "cell_11/cell_output/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "final_layer/Relu"
  op: "Relu"
  input: "cell_11/cell_output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "final_layer/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "final_layer/Mean"
  op: "Mean"
  input: "final_layer/Relu"
  input: "final_layer/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "final_layer/dropout/Identity"
  op: "Identity"
  input: "final_layer/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\000\000\351\003\000\000"
      }
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05096472054719925
      }
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "final_layer/FC/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "final_layer/FC/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "final_layer/FC/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
}
node {
  name: "final_layer/FC/weights/Initializer/truncated_normal"
  op: "Add"
  input: "final_layer/FC/weights/Initializer/truncated_normal/mul"
  input: "final_layer/FC/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
}
node {
  name: "final_layer/FC/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4320
        }
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "final_layer/FC/weights/Assign"
  op: "Assign"
  input: "final_layer/FC/weights"
  input: "final_layer/FC/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "final_layer/FC/weights/read"
  op: "Identity"
  input: "final_layer/FC/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/weights"
      }
    }
  }
}
node {
  name: "final_layer/FC/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1001
      }
    }
  }
}
node {
  name: "final_layer/FC/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "final_layer/FC/biases/Initializer/zeros"
  op: "Fill"
  input: "final_layer/FC/biases/Initializer/zeros/shape_as_tensor"
  input: "final_layer/FC/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "final_layer/FC/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "final_layer/FC/biases/Assign"
  op: "Assign"
  input: "final_layer/FC/biases"
  input: "final_layer/FC/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "final_layer/FC/biases/read"
  op: "Identity"
  input: "final_layer/FC/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer/FC/biases"
      }
    }
  }
}
node {
  name: "final_layer/FC/MatMul"
  op: "MatMul"
  input: "final_layer/dropout/Identity"
  input: "final_layer/FC/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "final_layer/FC/BiasAdd"
  op: "BiasAdd"
  input: "final_layer/FC/MatMul"
  input: "final_layer/FC/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "final_layer/predictions"
  op: "Softmax"
  input: "final_layer/FC/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 27
}
